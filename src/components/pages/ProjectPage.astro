---
import { db, Comment, Author } from "astro:db";
import EntryLayout from "@layouts/EntryLayout.astro";
import { eq } from "astro:db";

const { project } = Astro.props;
// Consulta de tabla
// const comentarios = await db.select().from(Comment);

// Consultar solo los comentarios del post
let comentarios = await db
  .select()
  .from(Comment)
  .where(eq(Comment.postId, project.data.id));

const authores = await db.select().from(Author);

console.log(comentarios);
console.log(authores);

// Insertar datos apartir de un form
if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const comment = formData.get("comment");
  const name = formData.get("name");

  if (!comment || !name) {
    return Astro.redirect("/404.astro");
  }

  // TODO: Logica de creacion de id dinamico y seguro
  const idAuthor = Math.floor(Math.random() * 1000);

  const authorTemp = {
    id: idAuthor,
    name: name.toString(),
  };

  const response = await db.insert(Author).values(authorTemp);

  if (!response) {
    return Astro.redirect("/404.astro");
  } else {
    console.log(response);
    await db.insert(Comment).values({
      authorId: idAuthor,
      postId: project.data.id,
      body: comment.toString(),
    });
  }
}

// Volver a consultar los comentarios
comentarios = await db
  .select()
  .from(Comment)
  .where(eq(Comment.postId, project.data.id));

console.log(comentarios);
---

<EntryLayout entry={project.data}>
  <slot />

  <!-- Obtener los comentarios del post de astrodb -->

  <!-- Formulario para comentarios -->
  <section
    class="comments-section w-full max-w-2xl mx-auto px-4 py-10"
    slot="footer"
  >
    {
      comentarios.map((comentario) => (
        <div>
          <p>{comentario.body}</p>
        </div>
      ))
    }

    <h2 class="text-2xl font-bold text-neutral-800 dark:text-neutral-100 mb-6">
      Deja un comentario
    </h2>

    <form
      method="post"
      id="commentForm"
      class="space-y-6 bg-neutral-50 dark:bg-neutral-900 p-6 rounded-lg shadow-md"
    >
      <div>
        <label
          for="name"
          class="block text-sm font-medium text-neutral-700 dark:text-neutral-200 mb-1"
        >
          Nombre:
        </label>
        <input
          type="text"
          id="name"
          name="name"
          required
          class="w-full px-4 py-2 rounded-md border border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 text-neutral-800 dark:text-neutral-100 focus:outline-none focus:ring-2 focus:ring-neutral-400 dark:focus:ring-neutral-600 transition duration-200"
        />
      </div>

      <div>
        <label
          for="comment"
          class="block text-sm font-medium text-neutral-700 dark:text-neutral-200 mb-1"
        >
          Comentario:
        </label>
        <textarea
          id="comment"
          name="comment"
          rows="4"
          required
          class="w-full px-4 py-2 rounded-md border border-neutral-300 dark:border-neutral-700 bg-white dark:bg-neutral-800 text-neutral-800 dark:text-neutral-100 focus:outline-none focus:ring-2 focus:ring-neutral-400 dark:focus:ring-neutral-600 transition duration-200 resize-y"
        ></textarea>
      </div>

      <button
        type="submit"
        class="bg-primary-800 dark:bg-neutral-200 text-white dark:text-neutral-900 font-semibold px-6 py-2 rounded-md hover:bg-primary-700 dark:hover:bg-neutral-100 transition duration-200"
      >
        Enviar
      </button>
    </form>
  </section>
</EntryLayout>

<script></script>

<style>
  .project-image {
    width: 100%;
    height: auto;
    margin-bottom: 1rem;
  }

  .project-content {
    margin-bottom: 2rem;
  }

  .comments-section {
    margin-top: 2rem;
  }

  form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  input,
  textarea,
  button {
    font-size: 1rem;
    padding: 0.5rem;
  }
</style>
